name: Artifacts and Data

on:
  push:
    branches:
      - main
  workflow_dispatch:

# NB: you can skip a workflow run for a particular commit by including [skip ci] or [ci skip] in the commit message

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

# for caching we need to add it before the step we want to cache, in thisc case before installing dependencies
      - name: cache dependencies 
        uses: actions/cache@v4
        with: 
          # we can add the path here to the cached folder
          path: ~/.npm
          # we need to set a key for the cache
          # we know that this file changes when dependencies change and 
          # that in node this is the file that contains the dependencies
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

        # this will still run , but if it sees that the key is the same as a previous run
        # it will restore the cache from that previous run
        # and if the key is different it will create a new cache entry
        # for caching to work on differnt progreamming languages, check the offical documentation 
      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: 
      script-file: ${{steps.step_file_name.outputs.myFilename}} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # we now repeat this caching step here in the build job for all jobs that use dependencies
      - name: cache dependencies 
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run build script
        run: npm run build

      - name: Output filename of Js filename
        id: step_file_name #this ID is how we access the output of this step
        run:  find dist/assets/*.js -type f -execdir echo 'myFilename={}' >> $GITHUB_OUTPUT ';'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-results
          path: dist
          #path: |
           # dist
            #package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download the build artifacts
        uses: actions/Download-artifact@v4
        with:
          name: build-results # this is the name of the uploaded artifact created in the last job
          path: dist

      - name: list files in folder
        run: ls

      # now lets use that artifact we created in the build job
      - name : output the file name from build job
        run: echo "${{ needs.build.outputs.script-file }}"

      - name: Deploy application
        run: echo "Deploying application"
