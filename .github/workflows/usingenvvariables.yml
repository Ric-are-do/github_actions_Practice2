name: AEnvironment Variables Example

on:
  workflow_dispatch:
# NB: you can skip a workflow run for a particular commit by including [skip ci] or [ci skip] in the commit message
# Declairing environment variables
env: 
  #<key>: <value>
  Node_env: production
  DEPLOY_ENV: staging
  API_URL: https://api.example.com

  # set env variables for login in github secrets and use them here

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: cache dependencies 
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: 
      script-file: ${{steps.step_file_name.outputs.myFilename}} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # we now repeat this caching step here in the build job for all jobs that use dependencies
      - name: cache dependencies 
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run build script
        run: npm run build

      - name: Output filename of Js filename
        id: step_file_name #this ID is how we access the output of this step
        run:  find dist/assets/*.js -type f -execdir echo 'myFilename={}' >> $GITHUB_OUTPUT ';'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-results
          path: dist
          #path: |
           # dist
            #package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download the build artifacts
        uses: actions/Download-artifact@v4
        with:
          name: build-results # this is the name of the uploaded artifact created in the last job
          path: dist

      - name: list files in folder
        run: ls
      - name : output the file name from build job
        run: echo "${{ needs.build.outputs.script-file }}"

      - name: Deploy application
        run: |
          echo "Deploying application"
          echo "Using environment variables:"
          echo "NODE_ENV: ${{ env.Node_env }}"
          echo "DEPLOY_ENV: ${{ env.DEPLOY_ENV }}"
          echo "API_URL: ${{ env.API_URL }}"
          echo "Secrets Username : ${{ secrets.ENV_USERNAME }}"
          echo "Secrets Password: ${{ secrets.ENV_PASSWORD }}"
          echo "Secrets Password: ${{ secrets.ANOTHERSECRET }}"

# note that the secrets for username and password are in the repository settings file 
#they are named ENV_USERNAME and ENV_PASSWORD , you do not have to always add the env part , i just did it for vibes and energy
# I added another called another secret to show you can add as many as you want and whith any name you want since you access them 
          #using the secrets context

# nnote when you try and print those secrets github will not let you see them in the logs for security reasons

